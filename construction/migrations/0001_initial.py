# Generated by Django 3.0.7 on 2020-06-30 17:30

import construction.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=255, null=True, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=255, null=True, verbose_name='Last Name')),
                ('suffix', models.CharField(blank=True, max_length=255, verbose_name='Suffix')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Admin - User',
                'verbose_name_plural': 'Admin - User',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Admin - City',
            },
        ),
        migrations.CreateModel(
            name='ExternalOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier', models.CharField(max_length=255)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('amount', models.FloatField(default=0, verbose_name='Amount')),
                ('image', models.ImageField(blank=True, null=True, upload_to=construction.models.or_upload_path, verbose_name='OR Image')),
            ],
            options={
                'verbose_name': 'ProjectSite - External Order',
                'verbose_name_plural': 'ProjectSite - External Order',
            },
        ),
        migrations.CreateModel(
            name='ExternalProjectInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ProjectSite - External Inventory(onsite)',
                'verbose_name_plural': 'ProjectSite - External Inventory(onsite)',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Admin - Gender',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alternate_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alternate Code')),
                ('item_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Code')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('quantity', models.FloatField(default=0, verbose_name='Quantity')),
                ('unit_price', models.FloatField(blank=True, null=True, verbose_name='Unit Price')),
            ],
            options={
                'verbose_name_plural': 'Admin - Material Inventory Office',
            },
        ),
        migrations.CreateModel(
            name='JobOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Format: yyyy-mm-dd', verbose_name='Date Given')),
                ('duration', models.DateField(help_text='Format: yyyy-mm-dd', verbose_name='Duration')),
                ('pic', models.ForeignKey(limit_choices_to={'groups__name': 'Person In-Charge'}, on_delete=django.db.models.deletion.CASCADE, related_name='joborder_pic', to=settings.AUTH_USER_MODEL, verbose_name='Prepared by')),
            ],
            options={
                'verbose_name': 'ProjectSite - Job Order',
                'verbose_name_plural': 'ProjectSite - Job Order',
            },
        ),
        migrations.CreateModel(
            name='PersonnelSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=255, verbose_name='Skill')),
            ],
            options={
                'verbose_name': 'Admin - Personnel Skills',
                'verbose_name_plural': 'Admin - Personnel Skills',
            },
        ),
        migrations.CreateModel(
            name='PersonnelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personneltype', models.CharField(max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Admin - Personnel Type',
                'verbose_name_plural': 'Admin - Personnel Type',
            },
        ),
        migrations.CreateModel(
            name='ProjectDailyReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
            ],
            options={
                'verbose_name': 'ProjectSite - Material Report(Inventory - onsite)',
                'verbose_name_plural': 'ProjectSite - Material Report(Inventory - onsite)',
            },
        ),
        migrations.CreateModel(
            name='ProjectInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ProjectSite - Inventory(onsite)',
                'verbose_name_plural': 'ProjectSite - Inventory(onsite)',
            },
        ),
        migrations.CreateModel(
            name='ProjectProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_progress', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectsite', models.CharField(max_length=255, null=True, verbose_name='Project Name')),
                ('address', models.CharField(help_text='Apartment, suite, unit, building, floor, street, barangay', max_length=255, null=True, verbose_name='Address')),
                ('status', models.CharField(blank=True, choices=[('Completed (Overdue)', 'Completed (Overdue)'), ('On-going', 'On-going'), ('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=255)),
                ('lotarea', models.CharField(blank=True, help_text='Please indicate if square meter, square kilometer, square mile, hectare, acre', max_length=255, verbose_name='Lot Area')),
                ('startdate', models.DateField(blank=True, help_text='Format: YYYY-MM-DD', null=True, verbose_name='Start Project Date')),
                ('comdate', models.DateField(blank=True, help_text='Format: YYYY-MM-DD', null=True, verbose_name='Project Completion Date')),
                ('mpd', models.DateField(blank=True, help_text='Format: YYYY-MM-DD', null=True, verbose_name='Maintenance Period End Date')),
                ('design', models.ImageField(blank=True, null=True, upload_to=construction.models.project_upload_path, verbose_name='Blueprint')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.City', verbose_name='City')),
                ('client', models.ForeignKey(limit_choices_to={'groups__name': 'Client'}, on_delete=django.db.models.deletion.CASCADE, related_name='projectsite_client', to=settings.AUTH_USER_MODEL, verbose_name='Client')),
                ('pic', models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'Person In-Charge'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projectsite_pic', to=settings.AUTH_USER_MODEL, verbose_name='Person In Charge')),
                ('pm', models.ForeignKey(limit_choices_to={'groups__name': 'Project Manager'}, on_delete=django.db.models.deletion.CASCADE, related_name='projectsite_pm', to=settings.AUTH_USER_MODEL, verbose_name='Project Manager')),
            ],
            options={
                'verbose_name': 'ProjectSite',
                'verbose_name_plural': 'ProjectSite',
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projecttype', models.CharField(max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Admin - Project Type',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Admin - Province',
                'verbose_name_plural': 'Admin - Province',
            },
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255, null=True, verbose_name='Subject')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('amount', models.FloatField(default=0, verbose_name='Total Amount')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], default='Pending', max_length=255, verbose_name='Status')),
                ('projectsite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotation', to='construction.ProjectSite', verbose_name='Project Site')),
            ],
            options={
                'verbose_name': 'ProjectSite - Quotation',
                'verbose_name_plural': 'ProjectSite - Quotation',
            },
        ),
        migrations.CreateModel(
            name='Requisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('status', models.CharField(choices=[('To be Delivered', 'To be Delivered'), ('Pending', 'Pending'), ('Closed', 'Closed')], default='Pending', max_length=255)),
                ('projectsite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisition_project', to='construction.ProjectSite', verbose_name='Project Site')),
                ('whm', models.ForeignKey(help_text='Warehouseman', limit_choices_to={'groups__name': 'Warehouseman'}, on_delete=django.db.models.deletion.CASCADE, related_name='requisition_whm', to=settings.AUTH_USER_MODEL, verbose_name='Prepared by')),
            ],
            options={
                'verbose_name': 'ProjectSite - Requisition',
                'verbose_name_plural': 'ProjectSite - Requisition',
            },
        ),
        migrations.CreateModel(
            name='RequisitionStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Admin - Requisition Status',
                'verbose_name_plural': 'Admin - Requisition Status',
            },
        ),
        migrations.CreateModel(
            name='ScopeOfWorkCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255, verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Admin - Category(Scope of Work)',
                'verbose_name_plural': 'Admin - Category(Scope of Work)',
            },
        ),
        migrations.CreateModel(
            name='SitePhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('projectsite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construction.ProjectSite')),
            ],
            options={
                'verbose_name': 'ProjectSite - SitePhotos',
                'verbose_name_plural': 'ProjectSite - SitePhotos',
            },
        ),
        migrations.CreateModel(
            name='SitePhotosDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to=construction.models.project_sitephotos_path, verbose_name='Photos')),
                ('reveal', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, null=True, verbose_name='Let the client view this?')),
                ('sitephotos', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construction.SitePhotos')),
            ],
            options={
                'verbose_name': 'Site Photos',
                'verbose_name_plural': 'Site Photos',
            },
        ),
        migrations.CreateModel(
            name='ScopeOfWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(max_length=255, null=True, verbose_name='Description')),
                ('materialcost', models.FloatField(blank=True, verbose_name='Material Cost')),
                ('laborcost', models.FloatField(blank=True, verbose_name='Labor Cost')),
                ('subbid', models.FloatField(blank=True, verbose_name='Sub bid')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.ScopeOfWorkCategory')),
            ],
            options={
                'verbose_name': 'Admin - Scope Of Work',
                'verbose_name_plural': 'Admin - Scope Of Work',
            },
        ),
        migrations.CreateModel(
            name='Rework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('instruction', models.TextField()),
                ('pm', models.ForeignKey(limit_choices_to={'groups__name': 'Project Manager'}, on_delete=django.db.models.deletion.CASCADE, related_name='rework_pm', to=settings.AUTH_USER_MODEL, verbose_name='Prepared by')),
                ('projectsite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reworkform', to='construction.ProjectSite', verbose_name='Project Site')),
            ],
            options={
                'verbose_name': 'ProjectSite - Rework',
                'verbose_name_plural': 'ProjectSite - Rework',
            },
        ),
        migrations.CreateModel(
            name='RequisitionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(null=True, upload_to=construction.models.requisition_upload_path, verbose_name='Image')),
                ('requisition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.Requisition')),
            ],
            options={
                'verbose_name': 'Requisition Image(dr/image proof)',
                'verbose_name_plural': 'Requisition Image(dr/image proof)',
            },
        ),
        migrations.CreateModel(
            name='RequisitionDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, verbose_name='Request Quantity')),
                ('articles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.Inventory', verbose_name='Articles')),
                ('requisition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisitiondetail', to='construction.Requisition', verbose_name='Requesition')),
            ],
            options={
                'verbose_name': 'Requisition Detail',
                'verbose_name_plural': 'Requisition Details',
            },
        ),
        migrations.CreateModel(
            name='RequisitionDelivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, null=True, verbose_name='Delivered Quantity')),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('status2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Action')),
                ('quantity2', models.IntegerField(verbose_name='Received Quantity')),
                ('articles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.Inventory', verbose_name='Articles')),
                ('requisition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.Requisition', verbose_name='Requesition')),
            ],
        ),
        migrations.CreateModel(
            name='QuotationDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(blank=True, max_length=255)),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.Quotation')),
                ('scope_of_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotationsow', to='construction.ScopeOfWork', verbose_name='quotation')),
            ],
        ),
        migrations.AddField(
            model_name='projectsite',
            name='province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Province', verbose_name='Province'),
        ),
        migrations.AddField(
            model_name='projectsite',
            name='typeofproject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.ProjectType', verbose_name='Project Type'),
        ),
        migrations.AddField(
            model_name='projectsite',
            name='whm',
            field=models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'Warehouseman'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projectsite_whm', to=settings.AUTH_USER_MODEL, verbose_name='Warehouseman'),
        ),
        migrations.CreateModel(
            name='ProjectProgressDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope_of_work', models.CharField(max_length=255, verbose_name='Scope of Work')),
                ('level', models.IntegerField(choices=[(5, 'high'), (3, 'medium'), (1, 'low')], default=1, verbose_name='Level')),
                ('status', models.CharField(choices=[('On-going', 'On-going'), ('Done', 'Done'), ('Pending', 'Pending')], default='Pending', max_length=255, verbose_name='Status')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion Date')),
                ('projectprogress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.ProjectProgress')),
            ],
        ),
        migrations.AddField(
            model_name='projectprogress',
            name='projectsite',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='construction.ProjectSite'),
        ),
        migrations.CreateModel(
            name='ProjectIssues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('description', models.TextField()),
                ('projectsite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectissue', to='construction.ProjectSite')),
                ('whm', models.ForeignKey(help_text='Warehouseman', limit_choices_to={'groups__name': 'Warehouseman'}, on_delete=django.db.models.deletion.CASCADE, related_name='projectissue_whm', to=settings.AUTH_USER_MODEL, verbose_name='Prepared by:')),
            ],
            options={
                'verbose_name': 'ProjectSite - Project Issues',
                'verbose_name_plural': 'ProjectSite - Project Issues',
            },
        ),
        migrations.CreateModel(
            name='ProjectInventoryDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='Quantity')),
                ('articles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.Inventory', verbose_name='Articles')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.ProjectInventory', verbose_name='Project Site Inventory')),
            ],
        ),
        migrations.AddField(
            model_name='projectinventory',
            name='projectsite',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='construction.ProjectSite', verbose_name='Project Site'),
        ),
        migrations.CreateModel(
            name='ProjectDailyReportDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(null=True)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('articles', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Inventory')),
                ('report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construction.ProjectDailyReport')),
            ],
        ),
        migrations.AddField(
            model_name='projectdailyreport',
            name='projectsite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construction.ProjectSite'),
        ),
        migrations.AddField(
            model_name='projectdailyreport',
            name='whm',
            field=models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'Warehouseman'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dailyreport_whm', to=settings.AUTH_USER_MODEL, verbose_name='Warehouseman'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='user.png', upload_to=construction.models.profile_upload_path)),
                ('birthdate', models.DateField(help_text='Format: yyyy-mm-dd', null=True, verbose_name='Birth date')),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=15, verbose_name='Phone')),
                ('address', models.CharField(help_text='Apartment, suite, unit, building, floor, street, barangay', max_length=255)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.City', verbose_name='City')),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Province', verbose_name='Province')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profile',
            },
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('suffix', models.CharField(blank=True, max_length=50, verbose_name='Suffix')),
                ('contact', models.CharField(max_length=20, verbose_name='Contact Number')),
                ('address', models.CharField(help_text='Apartment, suite, unit, building, floor, street, barangay', max_length=255, null=True)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Currently Assigned', 'Currently Assigned')], default='Available', max_length=255, verbose_name='Status')),
                ('date', models.DateField(blank=True, null=True)),
                ('date2', models.DateField(blank=True, null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.City', verbose_name='City')),
                ('personnel_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.PersonnelType')),
                ('projectsite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.ProjectSite')),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Province', verbose_name='Province')),
                ('skill', models.ManyToManyField(related_name='personnel', to='construction.PersonnelSkill')),
            ],
            options={
                'verbose_name': 'Personnel',
                'verbose_name_plural': 'Personnel',
            },
        ),
        migrations.CreateModel(
            name='JobOrderTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=255, verbose_name='Activity of the Week')),
                ('date', models.DateField(blank=True, null=True, verbose_name='From')),
                ('date2', models.DateField(blank=True, null=True, verbose_name='To')),
                ('remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Remarks')),
                ('status', models.CharField(choices=[('On-going', 'On-going'), ('Done', 'Done'), ('Pending', 'Pending')], default='Pending', max_length=255, verbose_name='Status')),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('joborder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobordertask', to='construction.JobOrder', verbose_name='Joborder')),
                ('personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobordertask', to='construction.Personnel', verbose_name='Personnel')),
            ],
            options={
                'verbose_name': 'Job Order Task',
                'verbose_name_plural': 'Job Order Tasks',
            },
        ),
        migrations.AddField(
            model_name='joborder',
            name='projectsite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joborder', to='construction.ProjectSite', verbose_name='Project Site'),
        ),
        migrations.CreateModel(
            name='ExternalProjectInventoryDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('articles', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='Quantity')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.ExternalProjectInventory', verbose_name='Project Site Inventory')),
            ],
        ),
        migrations.AddField(
            model_name='externalprojectinventory',
            name='projectsite',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='construction.ProjectSite', verbose_name='Project Site'),
        ),
        migrations.CreateModel(
            name='ExternalOrderReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('projectsite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construction.ProjectSite')),
                ('whm', models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'Warehouseman'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Warehouseman')),
            ],
            options={
                'verbose_name': 'ProjectSite - Material Report(External Inventory - onsite)',
                'verbose_name_plural': 'ProjectSite - Material Report(External Inventory - onsite)',
            },
        ),
        migrations.CreateModel(
            name='ExternalOrderDetailsReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('articles', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.ExternalProjectInventoryDetails')),
                ('report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construction.ExternalOrderReport')),
            ],
        ),
        migrations.CreateModel(
            name='ExternalOrderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, verbose_name=())),
                ('unit', models.CharField(max_length=255, verbose_name='Unit')),
                ('articles', models.CharField(max_length=255, verbose_name='Article')),
                ('unitprice', models.FloatField(verbose_name='Unit Price')),
                ('externalorder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalorderdetails', to='construction.ExternalOrder', verbose_name='Outside Purchase')),
            ],
            options={
                'verbose_name': 'External Order Detail',
                'verbose_name_plural': 'External Order Details',
            },
        ),
        migrations.AddField(
            model_name='externalorder',
            name='projectsite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalorder_project', to='construction.ProjectSite', verbose_name='Project Site'),
        ),
        migrations.AddField(
            model_name='externalorder',
            name='whm',
            field=models.ForeignKey(help_text='Warehouseman', limit_choices_to={'groups__name': 'Warehouseman'}, on_delete=django.db.models.deletion.CASCADE, related_name='externalorder_whm', to=settings.AUTH_USER_MODEL, verbose_name='Prepared By'),
        ),
        migrations.AddField(
            model_name='city',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construction.Province'),
        ),
    ]
